import numpy as np
from scipy.spatial.transform import Rotation as R
from numba import jit
import time
import random
import spatialmath.base as tr

PI = np.math.pi

# DH parameters
d1 = 169.77
a1 = 64.2
alpha1 = -90*PI/180
d2 = 0
a2 = 305
alpha2 = 0
d3 = 0
a3 = 0
alpha3 = 90*PI/180
d4 = -222.63
a4 = 0
alpha4 = -90*PI/180
d5 = 0
a5 = 0
alpha5 = 90*PI/180
d6 = -36.25
a6 = 0
alpha6 = 0


# @jit(parallel=True, fastmath=True)
def DH(theta, alpha, d, a):
    # DH1 = [np.math.cosd(theta) - np.math.sind(theta)*np.math.cosd(alpha) np.math.sind(theta)*np.math.sind(alpha) a*np.math.cosd(theta)
    #        np.math.sind(theta) np.math.cosd(theta)*np.math.cosd(alpha) - np.math.cosd(theta)*np.math.sind(alpha) a*np.math.sind(theta)
    #        0           np.math.sind(alpha)             np.math.cosd(alpha)             d
    #        0 0 0 1]

    row1 = np.asfarray([np.math.cos(theta), -np.math.sin(theta)*np.math.cos(alpha),
                        np.math.sin(theta)*np.math.sin(alpha), a*np.math.cos(theta)])
    row2 = np.asfarray([np.math.sin(theta), np.math.cos(
        theta)*np.math.cos(alpha), -np.math.cos(theta)*np.math.sin(alpha), a*np.math.sin(theta)])
    row3 = np.asfarray([0, np.math.sin(alpha), np.math.cos(alpha), d])
    row4 = np.asfarray([0, 0, 0, 1])

    DHMatrix = np.matrix([row1, row2, row3, row4])

    return DHMatrix


# @jit(parallel=True, fastmath=True)
def AR2FKZYZ(theta0):

    theta1 = theta0[0]
    theta2 = theta0[1]
    theta3 = theta0[2]
    theta4 = theta0[3]
    theta5 = theta0[4]
    theta6 = theta0[5]

    DH1 = DH(theta1, alpha1, d1, a1)
    DH2 = DH(theta2, alpha2, d2, a2)
    DH3 = DH(theta3, alpha3, d3, a3)
    DH4 = DH(theta4, alpha4, d4, a4)
    DH5 = DH(theta5, alpha5, d5, a5)
    DH6 = DH(theta6, alpha6, d6, a6)

    HT6 = DH1 * DH2 * DH3 * DH4 * DH5 * DH6

    pos = np.asarray([HT6[0, 3], HT6[1, 3], HT6[2, 3]])

    r = R.from_matrix(HT6[:3, :3])
    ori = r.as_euler('zyz')

    return np.concatenate((pos, ori), axis=None)

def jacobian0(theta0):

    theta1 = theta0[0]
    cth1 = np.math.cos(theta1)
    sal1 = np.math.sin(alpha1)
    sth1 = np.math.sin(theta1)
    cal1 = np.math.cos(alpha1)

    theta2 = theta0[1]
    cth2 = np.math.cos(theta2)
    sal2 = np.math.sin(alpha2)
    sth2 = np.math.sin(theta2)
    cal2 = np.math.cos(alpha2)

    theta3 = theta0[2]
    cth3 = np.math.cos(theta3)
    sal3 = np.math.sin(alpha3)
    sth3 = np.math.sin(theta3)
    cal3 = np.math.cos(alpha3)

    theta4 = theta0[3]
    cth4 = np.math.cos(theta4)
    sal4 = np.math.sin(alpha4)
    sth4 = np.math.sin(theta4)
    cal4 = np.math.cos(alpha4)

    theta5 = theta0[4]
    cth5 = np.math.cos(theta5)
    sal5 = np.math.sin(alpha5)
    sth5 = np.math.sin(theta5)
    cal5 = np.math.cos(alpha5)

    theta6 = theta0[5]
    cth6 = np.math.cos(theta6)
    sal6 = np.math.sin(alpha6)
    sth6 = np.math.sin(theta6)
    cal6 = np.math.cos(alpha6)


    row1 = [d6*(sal5*cth5*(sal4*(sal3*sth3*(cth2*sth1 + cal1*cth1*sth2) - cal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + sal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)) + cal4*sth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) - cal4*cth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))) - cal5*(cal4*(sal3*sth3*(cth2*sth1 + cal1*cth1*sth2) - cal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + sal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)) - sal4*sth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) + sal4*cth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))) + sal5*sth5*(cth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) + sth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)))) - d4*(sal3*sth3*(cth2*sth1 + cal1*cth1*sth2) - cal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + sal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)) + d3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) - a1*sth1 - d5*(cal4*(sal3*sth3*(cth2*sth1 + cal1*cth1*sth2) - cal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + sal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)) - sal4*sth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) + sal4*cth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))) - a6*cth6*(sth5*(sal4*(sal3*sth3*(cth2*sth1 + cal1*cth1*sth2) - cal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + sal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)) + cal4*sth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) - cal4*cth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))) - cth5*(cth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) + sth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)))) + a5*cth5*(cth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) + sth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))) + a4*sth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)) + d2*sal1*cth1 + a3*sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - a2*cth2*sth1 + a4*cth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) - a5*sth5*(sal4*(sal3*sth3*(cth2*sth1 + cal1*cth1*sth2) - cal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + sal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)) + cal4*sth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) - cal4*cth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))) - a3*cth3*(cth2*sth1 + cal1*cth1*sth2) - a6*sth6*(sal5*(cal4*(sal3*sth3*(cth2*sth1 + cal1*cth1*sth2) - cal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + sal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)) - sal4*sth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) + sal4*cth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))) + cal5*cth5*(sal4*(sal3*sth3*(cth2*sth1 + cal1*cth1*sth2) - cal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + sal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)) + cal4*sth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) - cal4*cth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))) + cal5*sth5*(cth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) + sth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)))) - a2*cal1*cth1*sth2, d4*(cal3*(sal2*cth1*cth2 - cal1*sal2*sth1*sth2) - sal3*sth3*(cth1*sth2 + cal1*cth2*sth1) + sal3*cth3*(cal2*cth1*cth2 - cal1*cal2*sth1*sth2)) - d5*(sal4*cth4*(sal3*(sal2*cth1*cth2 - cal1*sal2*sth1*sth2) + cal3*sth3*(cth1*sth2 + cal1*cth2*sth1) - cal3*cth3*(cal2*cth1*cth2 - cal1*cal2*sth1*sth2)) - cal4*(cal3*(sal2*cth1*cth2 - cal1*sal2*sth1*sth2) - sal3*sth3*(cth1*sth2 + cal1*cth2*sth1) + sal3*cth3*(cal2*cth1*cth2 - cal1*cal2*sth1*sth2)) + sal4*sth4*(sth3*(cal2*cth1*cth2 - cal1*cal2*sth1*sth2) + cth3*(cth1*sth2 + cal1*cth2*sth1))) - d6*(cal5*(sal4*cth4*(sal3*(sal2*cth1*cth2 - cal1*sal2*sth1*sth2) + cal3*sth3*(cth1*sth2 + cal1*cth2*sth1) - cal3*cth3*(cal2*cth1*cth2 - cal1*cal2*sth1*sth2)) - cal4*(cal3*(sal2*cth1*cth2 - cal1*sal2*sth1*sth2) - sal3*sth3*(cth1*sth2 + cal1*cth2*sth1) + sal3*cth3*(cal2*cth1*cth2 - cal1*cal2*sth1*sth2)) + sal4*sth4*(sth3*(cal2*cth1*cth2 - cal1*cal2*sth1*sth2) + cth3*(cth1*sth2 + cal1*cth2*sth1))) - sal5*sth5*(sth4*(sal3*(sal2*cth1*cth2 - cal1*sal2*sth1*sth2) + cal3*sth3*(cth1*sth2 + cal1*cth2*sth1) - cal3*cth3*(cal2*cth1*cth2 - cal1*cal2*sth1*sth2)) - cth4*(sth3*(cal2*cth1*cth2 - cal1*cal2*sth1*sth2) + cth3*(cth1*sth2 + cal1*cth2*sth1))) + sal5*cth5*(sal4*(cal3*(sal2*cth1*cth2 - cal1*sal2*sth1*sth2) - sal3*sth3*(cth1*sth2 + cal1*cth2*sth1) + sal3*cth3*(cal2*cth1*cth2 - cal1*cal2*sth1*sth2)) + cal4*sth4*(sth3*(cal2*cth1*cth2 - cal1*cal2*sth1*sth2) + cth3*(cth1*sth2 + cal1*cth2*sth1)) + cal4*cth4*(sal3*(sal2*cth1*cth2 - cal1*sal2*sth1*sth2) + cal3*sth3*(cth1*sth2 + cal1*cth2*sth1) - cal3*cth3*(cal2*cth1*cth2 - cal1*cal2*sth1*sth2)))) + d3*(sal2*cth1*cth2 - cal1*sal2*sth1*sth2) + a6*cth6*(sth5*(sal4*(cal3*(sal2*cth1*cth2 - cal1*sal2*sth1*sth2) - sal3*sth3*(cth1*sth2 + cal1*cth2*sth1) + sal3*cth3*(cal2*cth1*cth2 - cal1*cal2*sth1*sth2)) + cal4*sth4*(sth3*(cal2*cth1*cth2 - cal1*cal2*sth1*sth2) + cth3*(cth1*sth2 + cal1*cth2*sth1)) + cal4*cth4*(sal3*(sal2*cth1*cth2 - cal1*sal2*sth1*sth2) + cal3*sth3*(cth1*sth2 + cal1*cth2*sth1) - cal3*cth3*(cal2*cth1*cth2 - cal1*cal2*sth1*sth2))) + cth5*(sth4*(sal3*(sal2*cth1*cth2 - cal1*sal2*sth1*sth2) + cal3*sth3*(cth1*sth2 + cal1*cth2*sth1) - cal3*cth3*(cal2*cth1*cth2 - cal1*cal2*sth1*sth2)) - cth4*(sth3*(cal2*cth1*cth2 - cal1*cal2*sth1*sth2) + cth3*(cth1*sth2 + cal1*cth2*sth1)))) + a5*sth5*(sal4*(cal3*(sal2*cth1*cth2 - cal1*sal2*sth1*sth2) - sal3*sth3*(cth1*sth2 + cal1*cth2*sth1) + sal3*cth3*(cal2*cth1*cth2 - cal1*cal2*sth1*sth2)) + cal4*sth4*(sth3*(cal2*cth1*cth2 - cal1*cal2*sth1*sth2) + cth3*(cth1*sth2 + cal1*cth2*sth1)) + cal4*cth4*(sal3*(sal2*cth1*cth2 - cal1*sal2*sth1*sth2) + cal3*sth3*(cth1*sth2 + cal1*cth2*sth1) - cal3*cth3*(cal2*cth1*cth2 - cal1*cal2*sth1*sth2))) - a2*cth1*sth2 - a3*sth3*(cal2*cth1*cth2 - cal1*cal2*sth1*sth2) + a5*cth5*(sth4*(sal3*(sal2*cth1*cth2 - cal1*sal2*sth1*sth2) + cal3*sth3*(cth1*sth2 + cal1*cth2*sth1) - cal3*cth3*(cal2*cth1*cth2 - cal1*cal2*sth1*sth2)) - cth4*(sth3*(cal2*cth1*cth2 - cal1*cal2*sth1*sth2) + cth3*(cth1*sth2 + cal1*cth2*sth1))) + a4*sth4*(sal3*(sal2*cth1*cth2 - cal1*sal2*sth1*sth2) + cal3*sth3*(cth1*sth2 + cal1*cth2*sth1) - cal3*cth3*(cal2*cth1*cth2 - cal1*cal2*sth1*sth2)) - a4*cth4*(sth3*(cal2*cth1*cth2 - cal1*cal2*sth1*sth2) + cth3*(cth1*sth2 + cal1*cth2*sth1)) - a6*sth6*(sal5*(sal4*cth4*(sal3*(sal2*cth1*cth2 - cal1*sal2*sth1*sth2) + cal3*sth3*(cth1*sth2 + cal1*cth2*sth1) - cal3*cth3*(cal2*cth1*cth2 - cal1*cal2*sth1*sth2)) - cal4*(cal3*(sal2*cth1*cth2 - cal1*sal2*sth1*sth2) - sal3*sth3*(cth1*sth2 + cal1*cth2*sth1) + sal3*cth3*(cal2*cth1*cth2 - cal1*cal2*sth1*sth2)) + sal4*sth4*(sth3*(cal2*cth1*cth2 - cal1*cal2*sth1*sth2) + cth3*(cth1*sth2 + cal1*cth2*sth1))) + cal5*sth5*(sth4*(sal3*(sal2*cth1*cth2 - cal1*sal2*sth1*sth2) + cal3*sth3*(cth1*sth2 + cal1*cth2*sth1) - cal3*cth3*(cal2*cth1*cth2 - cal1*cal2*sth1*sth2)) - cth4*(sth3*(cal2*cth1*cth2 - cal1*cal2*sth1*sth2) + cth3*(cth1*sth2 + cal1*cth2*sth1))) - cal5*cth5*(sal4*(cal3*(sal2*cth1*cth2 - cal1*sal2*sth1*sth2) - sal3*sth3*(cth1*sth2 + cal1*cth2*sth1) + sal3*cth3*(cal2*cth1*cth2 - cal1*cal2*sth1*sth2)) + cal4*sth4*(sth3*(cal2*cth1*cth2 - cal1*cal2*sth1*sth2) + cth3*(cth1*sth2 + cal1*cth2*sth1)) + cal4*cth4*(sal3*(sal2*cth1*cth2 - cal1*sal2*sth1*sth2) + cal3*sth3*(cth1*sth2 + cal1*cth2*sth1) - cal3*cth3*(cal2*cth1*cth2 - cal1*cal2*sth1*sth2)))) - a3*cth3*(cth1*sth2 + cal1*cth2*sth1) - a2*cal1*cth2*sth1, d4*(sal3*cth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) - d6*(sal5*cth5*(sal4*(sal3*cth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) + cal4*sth4*(cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) + sth3*(cth1*cth2 - cal1*sth1*sth2)) - cal4*cth4*(cal3*cth3*(cth1*cth2 - cal1*sth1*sth2) - cal3*sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1))) - cal5*(cal4*(sal3*cth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) - sal4*sth4*(cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) + sth3*(cth1*cth2 - cal1*sth1*sth2)) + sal4*cth4*(cal3*cth3*(cth1*cth2 - cal1*sth1*sth2) - cal3*sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1))) + sal5*sth5*(cth4*(cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) + sth3*(cth1*cth2 - cal1*sth1*sth2)) + sth4*(cal3*cth3*(cth1*cth2 - cal1*sth1*sth2) - cal3*sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)))) + d5*(cal4*(sal3*cth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) - sal4*sth4*(cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) + sth3*(cth1*cth2 - cal1*sth1*sth2)) + sal4*cth4*(cal3*cth3*(cth1*cth2 - cal1*sth1*sth2) - cal3*sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1))) - a3*sth3*(cth1*cth2 - cal1*sth1*sth2) - a5*cth5*(cth4*(cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) + sth3*(cth1*cth2 - cal1*sth1*sth2)) + sth4*(cal3*cth3*(cth1*cth2 - cal1*sth1*sth2) - cal3*sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1))) + a6*cth6*(sth5*(sal4*(sal3*cth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) + cal4*sth4*(cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) + sth3*(cth1*cth2 - cal1*sth1*sth2)) - cal4*cth4*(cal3*cth3*(cth1*cth2 - cal1*sth1*sth2) - cal3*sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1))) - cth5*(cth4*(cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) + sth3*(cth1*cth2 - cal1*sth1*sth2)) + sth4*(cal3*cth3*(cth1*cth2 - cal1*sth1*sth2) - cal3*sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)))) + a6*sth6*(sal5*(cal4*(sal3*cth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) - sal4*sth4*(cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) + sth3*(cth1*cth2 - cal1*sth1*sth2)) + sal4*cth4*(cal3*cth3*(cth1*cth2 - cal1*sth1*sth2) - cal3*sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1))) + cal5*cth5*(sal4*(sal3*cth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) + cal4*sth4*(cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) + sth3*(cth1*cth2 - cal1*sth1*sth2)) - cal4*cth4*(cal3*cth3*(cth1*cth2 - cal1*sth1*sth2) - cal3*sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1))) + cal5*sth5*(cth4*(cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) + sth3*(cth1*cth2 - cal1*sth1*sth2)) + sth4*(cal3*cth3*(cth1*cth2 - cal1*sth1*sth2) - cal3*sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)))) - a4*sth4*(cal3*cth3*(cth1*cth2 - cal1*sth1*sth2) - cal3*sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) - a3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - a4*cth4*(cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) + sth3*(cth1*cth2 - cal1*sth1*sth2)) + a5*sth5*(sal4*(sal3*cth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) + cal4*sth4*(cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) + sth3*(cth1*cth2 - cal1*sth1*sth2)) - cal4*cth4*(cal3*cth3*(cth1*cth2 - cal1*sth1*sth2) - cal3*sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1))), a5*cth5*(sth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)) - cth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1))) - d6*(cal5*(sal4*cth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)) + sal4*sth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1))) + sal5*cth5*(cal4*cth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)) + cal4*sth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1))) - sal5*sth5*(sth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)) - cth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)))) - d5*(sal4*cth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)) + sal4*sth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1))) - a4*cth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) + a6*cth6*(sth5*(cal4*cth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)) + cal4*sth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1))) + cth5*(sth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)) - cth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)))) - a6*sth6*(sal5*(sal4*cth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)) + sal4*sth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1))) - cal5*cth5*(cal4*cth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)) + cal4*sth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1))) + cal5*sth5*(sth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)) - cth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)))) + a4*sth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)) + a5*sth5*(cal4*cth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)) + cal4*sth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1))), d6*(sal5*sth5*(sal4*(cal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + sal3*sth3*(cth1*cth2 - cal1*sth1*sth2) + sal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) + cal4*sth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)) - cal4*cth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1))) - sal5*cth5*(sth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) + cth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)))) - a6*sth6*(cal5*sth5*(sal4*(cal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + sal3*sth3*(cth1*cth2 - cal1*sth1*sth2) + sal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) + cal4*sth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)) - cal4*cth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1))) - cal5*cth5*(sth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) + cth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)))) + a5*sth5*(sth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) + cth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2))) + a6*cth6*(sth5*(sth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) + cth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2))) + cth5*(sal4*(cal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + sal3*sth3*(cth1*cth2 - cal1*sth1*sth2) + sal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) + cal4*sth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)) - cal4*cth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)))) + a5*cth5*(sal4*(cal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + sal3*sth3*(cth1*cth2 - cal1*sth1*sth2) + sal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) + cal4*sth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)) - cal4*cth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1))), a6*cth6*(sal5*(cal4*(cal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + sal3*sth3*(cth1*cth2 - cal1*sth1*sth2) + sal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) - sal4*sth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)) + sal4*cth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1))) + cal5*cth5*(sal4*(cal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + sal3*sth3*(cth1*cth2 - cal1*sth1*sth2) + sal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) + cal4*sth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)) - cal4*cth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1))) + cal5*sth5*(sth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) + cth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)))) - a6*sth6*(sth5*(sal4*(cal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + sal3*sth3*(cth1*cth2 - cal1*sth1*sth2) + sal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) + cal4*sth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)) - cal4*cth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1))) - cth5*(sth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) + cth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2))))]
    row2 = [d5*(cal4*(cal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + sal3*sth3*(cth1*cth2 - cal1*sth1*sth2) + sal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) - sal4*sth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)) + sal4*cth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1))) + a1*cth1 + d4*(cal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + sal3*sth3*(cth1*cth2 - cal1*sth1*sth2) + sal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) + d3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) - d6*(sal5*cth5*(sal4*(cal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + sal3*sth3*(cth1*cth2 - cal1*sth1*sth2) + sal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) + cal4*sth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)) - cal4*cth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1))) - cal5*(cal4*(cal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + sal3*sth3*(cth1*cth2 - cal1*sth1*sth2) + sal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) - sal4*sth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)) + sal4*cth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1))) + sal5*sth5*(sth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) + cth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)))) + a5*sth5*(sal4*(cal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + sal3*sth3*(cth1*cth2 - cal1*sth1*sth2) + sal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) + cal4*sth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)) - cal4*cth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1))) - a5*cth5*(sth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) + cth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2))) + a2*cth1*cth2 - a4*sth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) + d2*sal1*sth1 - a3*sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) + a6*cth6*(sth5*(sal4*(cal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + sal3*sth3*(cth1*cth2 - cal1*sth1*sth2) + sal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) + cal4*sth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)) - cal4*cth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1))) - cth5*(sth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) + cth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)))) - a4*cth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)) + a6*sth6*(sal5*(cal4*(cal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + sal3*sth3*(cth1*cth2 - cal1*sth1*sth2) + sal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) - sal4*sth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)) + sal4*cth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1))) + cal5*cth5*(sal4*(cal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + sal3*sth3*(cth1*cth2 - cal1*sth1*sth2) + sal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) + cal4*sth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)) - cal4*cth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1))) + cal5*sth5*(sth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) + cth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)))) + a3*cth3*(cth1*cth2 - cal1*sth1*sth2) - a2*cal1*sth1*sth2, d4*(cal3*(sal2*cth2*sth1 + cal1*sal2*cth1*sth2) - sal3*sth3*(sth1*sth2 - cal1*cth1*cth2) + sal3*cth3*(cal2*cth2*sth1 + cal1*cal2*cth1*sth2)) - d5*(sal4*cth4*(sal3*(sal2*cth2*sth1 + cal1*sal2*cth1*sth2) + cal3*sth3*(sth1*sth2 - cal1*cth1*cth2) - cal3*cth3*(cal2*cth2*sth1 + cal1*cal2*cth1*sth2)) - cal4*(cal3*(sal2*cth2*sth1 + cal1*sal2*cth1*sth2) - sal3*sth3*(sth1*sth2 - cal1*cth1*cth2) + sal3*cth3*(cal2*cth2*sth1 + cal1*cal2*cth1*sth2)) + sal4*sth4*(sth3*(cal2*cth2*sth1 + cal1*cal2*cth1*sth2) + cth3*(sth1*sth2 - cal1*cth1*cth2))) - d6*(cal5*(sal4*cth4*(sal3*(sal2*cth2*sth1 + cal1*sal2*cth1*sth2) + cal3*sth3*(sth1*sth2 - cal1*cth1*cth2) - cal3*cth3*(cal2*cth2*sth1 + cal1*cal2*cth1*sth2)) - cal4*(cal3*(sal2*cth2*sth1 + cal1*sal2*cth1*sth2) - sal3*sth3*(sth1*sth2 - cal1*cth1*cth2) + sal3*cth3*(cal2*cth2*sth1 + cal1*cal2*cth1*sth2)) + sal4*sth4*(sth3*(cal2*cth2*sth1 + cal1*cal2*cth1*sth2) + cth3*(sth1*sth2 - cal1*cth1*cth2))) - sal5*sth5*(sth4*(sal3*(sal2*cth2*sth1 + cal1*sal2*cth1*sth2) + cal3*sth3*(sth1*sth2 - cal1*cth1*cth2) - cal3*cth3*(cal2*cth2*sth1 + cal1*cal2*cth1*sth2)) - cth4*(sth3*(cal2*cth2*sth1 + cal1*cal2*cth1*sth2) + cth3*(sth1*sth2 - cal1*cth1*cth2))) + sal5*cth5*(sal4*(cal3*(sal2*cth2*sth1 + cal1*sal2*cth1*sth2) - sal3*sth3*(sth1*sth2 - cal1*cth1*cth2) + sal3*cth3*(cal2*cth2*sth1 + cal1*cal2*cth1*sth2)) + cal4*sth4*(sth3*(cal2*cth2*sth1 + cal1*cal2*cth1*sth2) + cth3*(sth1*sth2 - cal1*cth1*cth2)) + cal4*cth4*(sal3*(sal2*cth2*sth1 + cal1*sal2*cth1*sth2) + cal3*sth3*(sth1*sth2 - cal1*cth1*cth2) - cal3*cth3*(cal2*cth2*sth1 + cal1*cal2*cth1*sth2)))) + d3*(sal2*cth2*sth1 + cal1*sal2*cth1*sth2) + a6*cth6*(sth5*(sal4*(cal3*(sal2*cth2*sth1 + cal1*sal2*cth1*sth2) - sal3*sth3*(sth1*sth2 - cal1*cth1*cth2) + sal3*cth3*(cal2*cth2*sth1 + cal1*cal2*cth1*sth2)) + cal4*sth4*(sth3*(cal2*cth2*sth1 + cal1*cal2*cth1*sth2) + cth3*(sth1*sth2 - cal1*cth1*cth2)) + cal4*cth4*(sal3*(sal2*cth2*sth1 + cal1*sal2*cth1*sth2) + cal3*sth3*(sth1*sth2 - cal1*cth1*cth2) - cal3*cth3*(cal2*cth2*sth1 + cal1*cal2*cth1*sth2))) + cth5*(sth4*(sal3*(sal2*cth2*sth1 + cal1*sal2*cth1*sth2) + cal3*sth3*(sth1*sth2 - cal1*cth1*cth2) - cal3*cth3*(cal2*cth2*sth1 + cal1*cal2*cth1*sth2)) - cth4*(sth3*(cal2*cth2*sth1 + cal1*cal2*cth1*sth2) + cth3*(sth1*sth2 - cal1*cth1*cth2)))) + a5*sth5*(sal4*(cal3*(sal2*cth2*sth1 + cal1*sal2*cth1*sth2) - sal3*sth3*(sth1*sth2 - cal1*cth1*cth2) + sal3*cth3*(cal2*cth2*sth1 + cal1*cal2*cth1*sth2)) + cal4*sth4*(sth3*(cal2*cth2*sth1 + cal1*cal2*cth1*sth2) + cth3*(sth1*sth2 - cal1*cth1*cth2)) + cal4*cth4*(sal3*(sal2*cth2*sth1 + cal1*sal2*cth1*sth2) + cal3*sth3*(sth1*sth2 - cal1*cth1*cth2) - cal3*cth3*(cal2*cth2*sth1 + cal1*cal2*cth1*sth2))) - a2*sth1*sth2 - a3*sth3*(cal2*cth2*sth1 + cal1*cal2*cth1*sth2) + a5*cth5*(sth4*(sal3*(sal2*cth2*sth1 + cal1*sal2*cth1*sth2) + cal3*sth3*(sth1*sth2 - cal1*cth1*cth2) - cal3*cth3*(cal2*cth2*sth1 + cal1*cal2*cth1*sth2)) - cth4*(sth3*(cal2*cth2*sth1 + cal1*cal2*cth1*sth2) + cth3*(sth1*sth2 - cal1*cth1*cth2))) + a4*sth4*(sal3*(sal2*cth2*sth1 + cal1*sal2*cth1*sth2) + cal3*sth3*(sth1*sth2 - cal1*cth1*cth2) - cal3*cth3*(cal2*cth2*sth1 + cal1*cal2*cth1*sth2)) - a4*cth4*(sth3*(cal2*cth2*sth1 + cal1*cal2*cth1*sth2) + cth3*(sth1*sth2 - cal1*cth1*cth2)) - a6*sth6*(sal5*(sal4*cth4*(sal3*(sal2*cth2*sth1 + cal1*sal2*cth1*sth2) + cal3*sth3*(sth1*sth2 - cal1*cth1*cth2) - cal3*cth3*(cal2*cth2*sth1 + cal1*cal2*cth1*sth2)) - cal4*(cal3*(sal2*cth2*sth1 + cal1*sal2*cth1*sth2) - sal3*sth3*(sth1*sth2 - cal1*cth1*cth2) + sal3*cth3*(cal2*cth2*sth1 + cal1*cal2*cth1*sth2)) + sal4*sth4*(sth3*(cal2*cth2*sth1 + cal1*cal2*cth1*sth2) + cth3*(sth1*sth2 - cal1*cth1*cth2))) + cal5*sth5*(sth4*(sal3*(sal2*cth2*sth1 + cal1*sal2*cth1*sth2) + cal3*sth3*(sth1*sth2 - cal1*cth1*cth2) - cal3*cth3*(cal2*cth2*sth1 + cal1*cal2*cth1*sth2)) - cth4*(sth3*(cal2*cth2*sth1 + cal1*cal2*cth1*sth2) + cth3*(sth1*sth2 - cal1*cth1*cth2))) - cal5*cth5*(sal4*(cal3*(sal2*cth2*sth1 + cal1*sal2*cth1*sth2) - sal3*sth3*(sth1*sth2 - cal1*cth1*cth2) + sal3*cth3*(cal2*cth2*sth1 + cal1*cal2*cth1*sth2)) + cal4*sth4*(sth3*(cal2*cth2*sth1 + cal1*cal2*cth1*sth2) + cth3*(sth1*sth2 - cal1*cth1*cth2)) + cal4*cth4*(sal3*(sal2*cth2*sth1 + cal1*sal2*cth1*sth2) + cal3*sth3*(sth1*sth2 - cal1*cth1*cth2) - cal3*cth3*(cal2*cth2*sth1 + cal1*cal2*cth1*sth2)))) - a3*cth3*(sth1*sth2 - cal1*cth1*cth2) + a2*cal1*cth1*cth2, d4*(sal3*cth3*(cth2*sth1 + cal1*cth1*sth2) - sal3*sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)) + d5*(cal4*(sal3*cth3*(cth2*sth1 + cal1*cth1*sth2) - sal3*sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)) - sal4*sth4*(cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) + sth3*(cth2*sth1 + cal1*cth1*sth2)) + sal4*cth4*(cal3*cth3*(cth2*sth1 + cal1*cth1*sth2) - cal3*sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))) - d6*(sal5*cth5*(sal4*(sal3*cth3*(cth2*sth1 + cal1*cth1*sth2) - sal3*sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)) + cal4*sth4*(cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) + sth3*(cth2*sth1 + cal1*cth1*sth2)) - cal4*cth4*(cal3*cth3*(cth2*sth1 + cal1*cth1*sth2) - cal3*sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))) - cal5*(cal4*(sal3*cth3*(cth2*sth1 + cal1*cth1*sth2) - sal3*sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)) - sal4*sth4*(cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) + sth3*(cth2*sth1 + cal1*cth1*sth2)) + sal4*cth4*(cal3*cth3*(cth2*sth1 + cal1*cth1*sth2) - cal3*sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))) + sal5*sth5*(cth4*(cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) + sth3*(cth2*sth1 + cal1*cth1*sth2)) + sth4*(cal3*cth3*(cth2*sth1 + cal1*cth1*sth2) - cal3*sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)))) - a3*sth3*(cth2*sth1 + cal1*cth1*sth2) - a5*cth5*(cth4*(cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) + sth3*(cth2*sth1 + cal1*cth1*sth2)) + sth4*(cal3*cth3*(cth2*sth1 + cal1*cth1*sth2) - cal3*sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))) - a4*sth4*(cal3*cth3*(cth2*sth1 + cal1*cth1*sth2) - cal3*sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)) - a3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) + a5*sth5*(sal4*(sal3*cth3*(cth2*sth1 + cal1*cth1*sth2) - sal3*sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)) + cal4*sth4*(cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) + sth3*(cth2*sth1 + cal1*cth1*sth2)) - cal4*cth4*(cal3*cth3*(cth2*sth1 + cal1*cth1*sth2) - cal3*sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))) - a4*cth4*(cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) + sth3*(cth2*sth1 + cal1*cth1*sth2)) + a6*sth6*(sal5*(cal4*(sal3*cth3*(cth2*sth1 + cal1*cth1*sth2) - sal3*sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)) - sal4*sth4*(cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) + sth3*(cth2*sth1 + cal1*cth1*sth2)) + sal4*cth4*(cal3*cth3*(cth2*sth1 + cal1*cth1*sth2) - cal3*sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))) + cal5*sth5*(cth4*(cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) + sth3*(cth2*sth1 + cal1*cth1*sth2)) + sth4*(cal3*cth3*(cth2*sth1 + cal1*cth1*sth2) - cal3*sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))) + cal5*cth5*(sal4*(sal3*cth3*(cth2*sth1 + cal1*cth1*sth2) - sal3*sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)) + cal4*sth4*(cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) + sth3*(cth2*sth1 + cal1*cth1*sth2)) - cal4*cth4*(cal3*cth3*(cth2*sth1 + cal1*cth1*sth2) - cal3*sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)))) + a6*cth6*(sth5*(sal4*(sal3*cth3*(cth2*sth1 + cal1*cth1*sth2) - sal3*sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)) + cal4*sth4*(cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) + sth3*(cth2*sth1 + cal1*cth1*sth2)) - cal4*cth4*(cal3*cth3*(cth2*sth1 + cal1*cth1*sth2) - cal3*sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))) - cth5*(cth4*(cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) + sth3*(cth2*sth1 + cal1*cth1*sth2)) + sth4*(cal3*cth3*(cth2*sth1 + cal1*cth1*sth2) - cal3*sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)))), a6*cth6*(sth5*(cal4*cth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) + cal4*sth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))) + cth5*(sth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) - cth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)))) - d6*(cal5*(sal4*cth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) + sal4*sth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))) + sal5*cth5*(cal4*cth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) + cal4*sth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))) - sal5*sth5*(sth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) - cth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)))) - d5*(sal4*cth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) + sal4*sth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))) + a5*cth5*(sth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) - cth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))) - a6*sth6*(sal5*(sal4*cth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) + sal4*sth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))) - cal5*cth5*(cal4*cth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) + cal4*sth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))) + cal5*sth5*(sth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) - cth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)))) - a4*cth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)) + a4*sth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) + a5*sth5*(cal4*cth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) + cal4*sth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))), d6*(sal5*sth5*(sal4*(sal3*sth3*(cth2*sth1 + cal1*cth1*sth2) - cal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + sal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)) + cal4*sth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) - cal4*cth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))) - sal5*cth5*(cth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) + sth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)))) + a6*cth6*(cth5*(sal4*(sal3*sth3*(cth2*sth1 + cal1*cth1*sth2) - cal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + sal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)) + cal4*sth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) - cal4*cth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))) + sth5*(cth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) + sth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)))) + a5*sth5*(cth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) + sth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))) + a5*cth5*(sal4*(sal3*sth3*(cth2*sth1 + cal1*cth1*sth2) - cal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + sal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)) + cal4*sth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) - cal4*cth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))) - a6*sth6*(cal5*sth5*(sal4*(sal3*sth3*(cth2*sth1 + cal1*cth1*sth2) - cal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + sal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)) + cal4*sth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) - cal4*cth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))) - cal5*cth5*(cth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) + sth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)))), a6*cth6*(sal5*(cal4*(sal3*sth3*(cth2*sth1 + cal1*cth1*sth2) - cal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + sal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)) - sal4*sth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) + sal4*cth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))) + cal5*cth5*(sal4*(sal3*sth3*(cth2*sth1 + cal1*cth1*sth2) - cal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + sal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)) + cal4*sth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) - cal4*cth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))) + cal5*sth5*(cth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) + sth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)))) - a6*sth6*(sth5*(sal4*(sal3*sth3*(cth2*sth1 + cal1*cth1*sth2) - cal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + sal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)) + cal4*sth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) - cal4*cth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))) - cth5*(cth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) + sth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))))]
    row3 = [0, d4*(cal3*sal1*sal2*sth2 + sal1*sal3*cth2*sth3 + cal2*sal1*sal3*cth3*sth2) + d5*(cal4*(cal3*sal1*sal2*sth2 + sal1*sal3*cth2*sth3 + cal2*sal1*sal3*cth3*sth2) + sal4*sth4*(sal1*cth2*cth3 - cal2*sal1*sth2*sth3) + sal4*cth4*(cal3*sal1*cth2*sth3 - sal1*sal2*sal3*sth2 + cal2*cal3*sal1*cth3*sth2)) + d6*(cal5*(cal4*(cal3*sal1*sal2*sth2 + sal1*sal3*cth2*sth3 + cal2*sal1*sal3*cth3*sth2) + sal4*sth4*(sal1*cth2*cth3 - cal2*sal1*sth2*sth3) + sal4*cth4*(cal3*sal1*cth2*sth3 - sal1*sal2*sal3*sth2 + cal2*cal3*sal1*cth3*sth2)) + sal5*sth5*(cth4*(sal1*cth2*cth3 - cal2*sal1*sth2*sth3) - sth4*(cal3*sal1*cth2*sth3 - sal1*sal2*sal3*sth2 + cal2*cal3*sal1*cth3*sth2)) + sal5*cth5*(cal4*sth4*(sal1*cth2*cth3 - cal2*sal1*sth2*sth3) - sal4*(cal3*sal1*sal2*sth2 + sal1*sal3*cth2*sth3 + cal2*sal1*sal3*cth3*sth2) + cal4*cth4*(cal3*sal1*cth2*sth3 - sal1*sal2*sal3*sth2 + cal2*cal3*sal1*cth3*sth2))) - a4*sth4*(cal3*sal1*cth2*sth3 - sal1*sal2*sal3*sth2 + cal2*cal3*sal1*cth3*sth2) - a5*sth5*(cal4*sth4*(sal1*cth2*cth3 - cal2*sal1*sth2*sth3) - sal4*(cal3*sal1*sal2*sth2 + sal1*sal3*cth2*sth3 + cal2*sal1*sal3*cth3*sth2) + cal4*cth4*(cal3*sal1*cth2*sth3 - sal1*sal2*sal3*sth2 + cal2*cal3*sal1*cth3*sth2)) + a6*cth6*(cth5*(cth4*(sal1*cth2*cth3 - cal2*sal1*sth2*sth3) - sth4*(cal3*sal1*cth2*sth3 - sal1*sal2*sal3*sth2 + cal2*cal3*sal1*cth3*sth2)) - sth5*(cal4*sth4*(sal1*cth2*cth3 - cal2*sal1*sth2*sth3) - sal4*(cal3*sal1*sal2*sth2 + sal1*sal3*cth2*sth3 + cal2*sal1*sal3*cth3*sth2) + cal4*cth4*(cal3*sal1*cth2*sth3 - sal1*sal2*sal3*sth2 + cal2*cal3*sal1*cth3*sth2))) + a2*sal1*cth2 - a6*sth6*(cal5*sth5*(cth4*(sal1*cth2*cth3 - cal2*sal1*sth2*sth3) - sth4*(cal3*sal1*cth2*sth3 - sal1*sal2*sal3*sth2 + cal2*cal3*sal1*cth3*sth2)) - sal5*(cal4*(cal3*sal1*sal2*sth2 + sal1*sal3*cth2*sth3 + cal2*sal1*sal3*cth3*sth2) + sal4*sth4*(sal1*cth2*cth3 - cal2*sal1*sth2*sth3) + sal4*cth4*(cal3*sal1*cth2*sth3 - sal1*sal2*sal3*sth2 + cal2*cal3*sal1*cth3*sth2)) + cal5*cth5*(cal4*sth4*(sal1*cth2*cth3 - cal2*sal1*sth2*sth3) - sal4*(cal3*sal1*sal2*sth2 + sal1*sal3*cth2*sth3 + cal2*sal1*sal3*cth3*sth2) + cal4*cth4*(cal3*sal1*cth2*sth3 - sal1*sal2*sal3*sth2 + cal2*cal3*sal1*cth3*sth2))) + a4*cth4*(sal1*cth2*cth3 - cal2*sal1*sth2*sth3) + a5*cth5*(cth4*(sal1*cth2*cth3 - cal2*sal1*sth2*sth3) - sth4*(cal3*sal1*cth2*sth3 - sal1*sal2*sal3*sth2 + cal2*cal3*sal1*cth3*sth2)) + a3*sal1*cth2*cth3 + d3*sal1*sal2*sth2 - a3*cal2*sal1*sth2*sth3, d4*(sal3*sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*sal3*cth3*sth2) + d6*(cal5*(cal4*(sal3*sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*sal3*cth3*sth2) + sal4*cth4*(cal3*sth3*(cal1*sal2 + cal2*sal1*cth2) + cal3*sal1*cth3*sth2) + sal4*sth4*(cth3*(cal1*sal2 + cal2*sal1*cth2) - sal1*sth2*sth3)) - sal5*sth5*(sth4*(cal3*sth3*(cal1*sal2 + cal2*sal1*cth2) + cal3*sal1*cth3*sth2) - cth4*(cth3*(cal1*sal2 + cal2*sal1*cth2) - sal1*sth2*sth3)) + sal5*cth5*(cal4*cth4*(cal3*sth3*(cal1*sal2 + cal2*sal1*cth2) + cal3*sal1*cth3*sth2) - sal4*(sal3*sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*sal3*cth3*sth2) + cal4*sth4*(cth3*(cal1*sal2 + cal2*sal1*cth2) - sal1*sth2*sth3))) + d5*(cal4*(sal3*sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*sal3*cth3*sth2) + sal4*cth4*(cal3*sth3*(cal1*sal2 + cal2*sal1*cth2) + cal3*sal1*cth3*sth2) + sal4*sth4*(cth3*(cal1*sal2 + cal2*sal1*cth2) - sal1*sth2*sth3)) + a4*cth4*(cth3*(cal1*sal2 + cal2*sal1*cth2) - sal1*sth2*sth3) + a6*sth6*(sal5*(cal4*(sal3*sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*sal3*cth3*sth2) + sal4*cth4*(cal3*sth3*(cal1*sal2 + cal2*sal1*cth2) + cal3*sal1*cth3*sth2) + sal4*sth4*(cth3*(cal1*sal2 + cal2*sal1*cth2) - sal1*sth2*sth3)) - cal5*cth5*(cal4*cth4*(cal3*sth3*(cal1*sal2 + cal2*sal1*cth2) + cal3*sal1*cth3*sth2) - sal4*(sal3*sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*sal3*cth3*sth2) + cal4*sth4*(cth3*(cal1*sal2 + cal2*sal1*cth2) - sal1*sth2*sth3)) + cal5*sth5*(sth4*(cal3*sth3*(cal1*sal2 + cal2*sal1*cth2) + cal3*sal1*cth3*sth2) - cth4*(cth3*(cal1*sal2 + cal2*sal1*cth2) - sal1*sth2*sth3))) - a6*cth6*(cth5*(sth4*(cal3*sth3*(cal1*sal2 + cal2*sal1*cth2) + cal3*sal1*cth3*sth2) - cth4*(cth3*(cal1*sal2 + cal2*sal1*cth2) - sal1*sth2*sth3)) + sth5*(cal4*cth4*(cal3*sth3*(cal1*sal2 + cal2*sal1*cth2) + cal3*sal1*cth3*sth2) - sal4*(sal3*sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*sal3*cth3*sth2) + cal4*sth4*(cth3*(cal1*sal2 + cal2*sal1*cth2) - sal1*sth2*sth3))) - a5*cth5*(sth4*(cal3*sth3*(cal1*sal2 + cal2*sal1*cth2) + cal3*sal1*cth3*sth2) - cth4*(cth3*(cal1*sal2 + cal2*sal1*cth2) - sal1*sth2*sth3)) + a3*cth3*(cal1*sal2 + cal2*sal1*cth2) - a5*sth5*(cal4*cth4*(cal3*sth3*(cal1*sal2 + cal2*sal1*cth2) + cal3*sal1*cth3*sth2) - sal4*(sal3*sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*sal3*cth3*sth2) + cal4*sth4*(cth3*(cal1*sal2 + cal2*sal1*cth2) - sal1*sth2*sth3)) - a4*sth4*(cal3*sth3*(cal1*sal2 + cal2*sal1*cth2) + cal3*sal1*cth3*sth2) - a3*sal1*sth2*sth3, d6*(cal5*(sal4*sth4*(sal3*(cal1*cal2 - sal1*sal2*cth2) + cal3*cth3*(cal1*sal2 + cal2*sal1*cth2) - cal3*sal1*sth2*sth3) + sal4*cth4*(sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*cth3*sth2)) - sal5*sth5*(sth4*(sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*cth3*sth2) - cth4*(sal3*(cal1*cal2 - sal1*sal2*cth2) + cal3*cth3*(cal1*sal2 + cal2*sal1*cth2) - cal3*sal1*sth2*sth3)) + sal5*cth5*(cal4*sth4*(sal3*(cal1*cal2 - sal1*sal2*cth2) + cal3*cth3*(cal1*sal2 + cal2*sal1*cth2) - cal3*sal1*sth2*sth3) + cal4*cth4*(sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*cth3*sth2))) + d5*(sal4*sth4*(sal3*(cal1*cal2 - sal1*sal2*cth2) + cal3*cth3*(cal1*sal2 + cal2*sal1*cth2) - cal3*sal1*sth2*sth3) + sal4*cth4*(sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*cth3*sth2)) + a4*cth4*(sal3*(cal1*cal2 - sal1*sal2*cth2) + cal3*cth3*(cal1*sal2 + cal2*sal1*cth2) - cal3*sal1*sth2*sth3) + a6*sth6*(sal5*(sal4*sth4*(sal3*(cal1*cal2 - sal1*sal2*cth2) + cal3*cth3*(cal1*sal2 + cal2*sal1*cth2) - cal3*sal1*sth2*sth3) + sal4*cth4*(sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*cth3*sth2)) + cal5*sth5*(sth4*(sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*cth3*sth2) - cth4*(sal3*(cal1*cal2 - sal1*sal2*cth2) + cal3*cth3*(cal1*sal2 + cal2*sal1*cth2) - cal3*sal1*sth2*sth3)) - cal5*cth5*(cal4*sth4*(sal3*(cal1*cal2 - sal1*sal2*cth2) + cal3*cth3*(cal1*sal2 + cal2*sal1*cth2) - cal3*sal1*sth2*sth3) + cal4*cth4*(sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*cth3*sth2))) - a4*sth4*(sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*cth3*sth2) - a5*sth5*(cal4*sth4*(sal3*(cal1*cal2 - sal1*sal2*cth2) + cal3*cth3*(cal1*sal2 + cal2*sal1*cth2) - cal3*sal1*sth2*sth3) + cal4*cth4*(sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*cth3*sth2)) - a6*cth6*(sth5*(cal4*sth4*(sal3*(cal1*cal2 - sal1*sal2*cth2) + cal3*cth3*(cal1*sal2 + cal2*sal1*cth2) - cal3*sal1*sth2*sth3) + cal4*cth4*(sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*cth3*sth2)) + cth5*(sth4*(sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*cth3*sth2) - cth4*(sal3*(cal1*cal2 - sal1*sal2*cth2) + cal3*cth3*(cal1*sal2 + cal2*sal1*cth2) - cal3*sal1*sth2*sth3))) - a5*cth5*(sth4*(sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*cth3*sth2) - cth4*(sal3*(cal1*cal2 - sal1*sal2*cth2) + cal3*cth3*(cal1*sal2 + cal2*sal1*cth2) - cal3*sal1*sth2*sth3)), d6*(sal5*cth5*(sth4*(sal3*(cal1*cal2 - sal1*sal2*cth2) + cal3*cth3*(cal1*sal2 + cal2*sal1*cth2) - cal3*sal1*sth2*sth3) + cth4*(sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*cth3*sth2)) + sal5*sth5*(sal4*(cal3*(cal1*cal2 - sal1*sal2*cth2) - sal3*cth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*sal3*sth2*sth3) + cal4*cth4*(sal3*(cal1*cal2 - sal1*sal2*cth2) + cal3*cth3*(cal1*sal2 + cal2*sal1*cth2) - cal3*sal1*sth2*sth3) - cal4*sth4*(sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*cth3*sth2))) - a6*sth6*(cal5*cth5*(sth4*(sal3*(cal1*cal2 - sal1*sal2*cth2) + cal3*cth3*(cal1*sal2 + cal2*sal1*cth2) - cal3*sal1*sth2*sth3) + cth4*(sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*cth3*sth2)) + cal5*sth5*(sal4*(cal3*(cal1*cal2 - sal1*sal2*cth2) - sal3*cth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*sal3*sth2*sth3) + cal4*cth4*(sal3*(cal1*cal2 - sal1*sal2*cth2) + cal3*cth3*(cal1*sal2 + cal2*sal1*cth2) - cal3*sal1*sth2*sth3) - cal4*sth4*(sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*cth3*sth2))) + a5*cth5*(sal4*(cal3*(cal1*cal2 - sal1*sal2*cth2) - sal3*cth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*sal3*sth2*sth3) + cal4*cth4*(sal3*(cal1*cal2 - sal1*sal2*cth2) + cal3*cth3*(cal1*sal2 + cal2*sal1*cth2) - cal3*sal1*sth2*sth3) - cal4*sth4*(sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*cth3*sth2)) - a6*cth6*(sth5*(sth4*(sal3*(cal1*cal2 - sal1*sal2*cth2) + cal3*cth3*(cal1*sal2 + cal2*sal1*cth2) - cal3*sal1*sth2*sth3) + cth4*(sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*cth3*sth2)) - cth5*(sal4*(cal3*(cal1*cal2 - sal1*sal2*cth2) - sal3*cth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*sal3*sth2*sth3) + cal4*cth4*(sal3*(cal1*cal2 - sal1*sal2*cth2) + cal3*cth3*(cal1*sal2 + cal2*sal1*cth2) - cal3*sal1*sth2*sth3) - cal4*sth4*(sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*cth3*sth2))) - a5*sth5*(sth4*(sal3*(cal1*cal2 - sal1*sal2*cth2) + cal3*cth3*(cal1*sal2 + cal2*sal1*cth2) - cal3*sal1*sth2*sth3) + cth4*(sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*cth3*sth2)), a6*cth6*(sal5*(cal4*(cal3*(cal1*cal2 - sal1*sal2*cth2) - sal3*cth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*sal3*sth2*sth3) - sal4*cth4*(sal3*(cal1*cal2 - sal1*sal2*cth2) + cal3*cth3*(cal1*sal2 + cal2*sal1*cth2) - cal3*sal1*sth2*sth3) + sal4*sth4*(sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*cth3*sth2)) - cal5*sth5*(sth4*(sal3*(cal1*cal2 - sal1*sal2*cth2) + cal3*cth3*(cal1*sal2 + cal2*sal1*cth2) - cal3*sal1*sth2*sth3) + cth4*(sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*cth3*sth2)) + cal5*cth5*(sal4*(cal3*(cal1*cal2 - sal1*sal2*cth2) - sal3*cth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*sal3*sth2*sth3) + cal4*cth4*(sal3*(cal1*cal2 - sal1*sal2*cth2) + cal3*cth3*(cal1*sal2 + cal2*sal1*cth2) - cal3*sal1*sth2*sth3) - cal4*sth4*(sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*cth3*sth2))) - a6*sth6*(sth5*(sal4*(cal3*(cal1*cal2 - sal1*sal2*cth2) - sal3*cth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*sal3*sth2*sth3) + cal4*cth4*(sal3*(cal1*cal2 - sal1*sal2*cth2) + cal3*cth3*(cal1*sal2 + cal2*sal1*cth2) - cal3*sal1*sth2*sth3) - cal4*sth4*(sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*cth3*sth2)) + cth5*(sth4*(sal3*(cal1*cal2 - sal1*sal2*cth2) + cal3*cth3*(cal1*sal2 + cal2*sal1*cth2) - cal3*sal1*sth2*sth3) + cth4*(sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*cth3*sth2)))]
    row4 = [0, cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1, cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1, cal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + sal3*sth3*(cth1*cth2 - cal1*sth1*sth2) + sal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1), cal4*(cal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + sal3*sth3*(cth1*cth2 - cal1*sth1*sth2) + sal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) - sal4*sth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)) + sal4*cth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)), sal6*sth6*(sth5*(sal4*(cal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + sal3*sth3*(cth1*cth2 - cal1*sth1*sth2) + sal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) + cal4*sth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)) - cal4*cth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1))) - cth5*(sth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) + cth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)))) - cal6*(sal5*cth5*(sal4*(cal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + sal3*sth3*(cth1*cth2 - cal1*sth1*sth2) + sal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) + cal4*sth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)) - cal4*cth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1))) - cal5*(cal4*(cal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + sal3*sth3*(cth1*cth2 - cal1*sth1*sth2) + sal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) - sal4*sth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)) + sal4*cth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1))) + sal5*sth5*(sth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) + cth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)))) - sal6*cth6*(sal5*(cal4*(cal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + sal3*sth3*(cth1*cth2 - cal1*sth1*sth2) + sal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) - sal4*sth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)) + sal4*cth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1))) + cal5*cth5*(sal4*(cal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + sal3*sth3*(cth1*cth2 - cal1*sth1*sth2) + sal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) + cal4*sth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2)) - cal4*cth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1))) + cal5*sth5*(sth4*(cal3*sth3*(cth1*cth2 - cal1*sth1*sth2) - sal3*(cal2*sal1*sth1 + sal2*cth1*sth2 + cal1*sal2*cth2*sth1) + cal3*cth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1)) + cth4*(sth3*(cal2*cth1*sth2 - sal1*sal2*sth1 + cal1*cal2*cth2*sth1) - cth3*(cth1*cth2 - cal1*sth1*sth2))))]
    row5 = [0, sal2*sth1*sth2 - cal2*sal1*cth1 - cal1*sal2*cth1*cth2, sal2*sth1*sth2 - cal2*sal1*cth1 - cal1*sal2*cth1*cth2, sal3*sth3*(cth2*sth1 + cal1*cth1*sth2) - cal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + sal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2), cal4*(sal3*sth3*(cth2*sth1 + cal1*cth1*sth2) - cal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + sal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)) - sal4*sth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) + sal4*cth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)), sal6*sth6*(sth5*(sal4*(sal3*sth3*(cth2*sth1 + cal1*cth1*sth2) - cal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + sal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)) + cal4*sth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) - cal4*cth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))) - cth5*(cth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) + sth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)))) - sal6*cth6*(sal5*(cal4*(sal3*sth3*(cth2*sth1 + cal1*cth1*sth2) - cal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + sal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)) - sal4*sth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) + sal4*cth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))) + cal5*cth5*(sal4*(sal3*sth3*(cth2*sth1 + cal1*cth1*sth2) - cal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + sal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)) + cal4*sth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) - cal4*cth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))) + cal5*sth5*(cth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) + sth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)))) - cal6*(sal5*cth5*(sal4*(sal3*sth3*(cth2*sth1 + cal1*cth1*sth2) - cal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + sal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)) + cal4*sth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) - cal4*cth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))) - cal5*(cal4*(sal3*sth3*(cth2*sth1 + cal1*cth1*sth2) - cal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + sal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2)) - sal4*sth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) + sal4*cth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))) + sal5*sth5*(cth4*(sth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2) - cth3*(cth2*sth1 + cal1*cth1*sth2)) + sth4*(sal3*(cal2*sal1*cth1 - sal2*sth1*sth2 + cal1*sal2*cth1*cth2) + cal3*sth3*(cth2*sth1 + cal1*cth1*sth2) + cal3*cth3*(sal1*sal2*cth1 + cal2*sth1*sth2 - cal1*cal2*cth1*cth2))))]
    row6 = [1, cal1*cal2 - sal1*sal2*cth2, cal1*cal2 - sal1*sal2*cth2, cal3*(cal1*cal2 - sal1*sal2*cth2) - sal3*cth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*sal3*sth2*sth3, cal4*(cal3*(cal1*cal2 - sal1*sal2*cth2) - sal3*cth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*sal3*sth2*sth3) - sal4*cth4*(sal3*(cal1*cal2 - sal1*sal2*cth2) + cal3*cth3*(cal1*sal2 + cal2*sal1*cth2) - cal3*sal1*sth2*sth3) + sal4*sth4*(sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*cth3*sth2), cal6*(cal5*(cal4*(cal3*(cal1*cal2 - sal1*sal2*cth2) - sal3*cth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*sal3*sth2*sth3) - sal4*cth4*(sal3*(cal1*cal2 - sal1*sal2*cth2) + cal3*cth3*(cal1*sal2 + cal2*sal1*cth2) - cal3*sal1*sth2*sth3) + sal4*sth4*(sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*cth3*sth2)) + sal5*sth5*(sth4*(sal3*(cal1*cal2 - sal1*sal2*cth2) + cal3*cth3*(cal1*sal2 + cal2*sal1*cth2) - cal3*sal1*sth2*sth3) + cth4*(sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*cth3*sth2)) - sal5*cth5*(sal4*(cal3*(cal1*cal2 - sal1*sal2*cth2) - sal3*cth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*sal3*sth2*sth3) + cal4*cth4*(sal3*(cal1*cal2 - sal1*sal2*cth2) + cal3*cth3*(cal1*sal2 + cal2*sal1*cth2) - cal3*sal1*sth2*sth3) - cal4*sth4*(sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*cth3*sth2))) + sal6*sth6*(sth5*(sal4*(cal3*(cal1*cal2 - sal1*sal2*cth2) - sal3*cth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*sal3*sth2*sth3) + cal4*cth4*(sal3*(cal1*cal2 - sal1*sal2*cth2) + cal3*cth3*(cal1*sal2 + cal2*sal1*cth2) - cal3*sal1*sth2*sth3) - cal4*sth4*(sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*cth3*sth2)) + cth5*(sth4*(sal3*(cal1*cal2 - sal1*sal2*cth2) + cal3*cth3*(cal1*sal2 + cal2*sal1*cth2) - cal3*sal1*sth2*sth3) + cth4*(sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*cth3*sth2))) - sal6*cth6*(sal5*(cal4*(cal3*(cal1*cal2 - sal1*sal2*cth2) - sal3*cth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*sal3*sth2*sth3) - sal4*cth4*(sal3*(cal1*cal2 - sal1*sal2*cth2) + cal3*cth3*(cal1*sal2 + cal2*sal1*cth2) - cal3*sal1*sth2*sth3) + sal4*sth4*(sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*cth3*sth2)) - cal5*sth5*(sth4*(sal3*(cal1*cal2 - sal1*sal2*cth2) + cal3*cth3*(cal1*sal2 + cal2*sal1*cth2) - cal3*sal1*sth2*sth3) + cth4*(sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*cth3*sth2)) + cal5*cth5*(sal4*(cal3*(cal1*cal2 - sal1*sal2*cth2) - sal3*cth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*sal3*sth2*sth3) + cal4*cth4*(sal3*(cal1*cal2 - sal1*sal2*cth2) + cal3*cth3*(cal1*sal2 + cal2*sal1*cth2) - cal3*sal1*sth2*sth3) - cal4*sth4*(sth3*(cal1*sal2 + cal2*sal1*cth2) + sal1*cth3*sth2)))]

    J = np.matrix([row1, row2, row3, row4, row5, row6])

    return J


if __name__ == "__main__":

    theta0 = np.asarray([0, -1.396263401595464, 1.570796326794897, 0, 0, 0])
    # this is how you transpose something to a column vector
    theta0 = np.vstack(theta0)
    
    start_time = time.time()

    J = jacobian0(theta0)

    pos = np.linalg.pinv(J) * theta0

    end_time = time.time()

    print(end_time-start_time)

    print(pos)
